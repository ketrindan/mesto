(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._likes=e.likes,this._owner=e.owner,this._selector=n,this._handleImageClick=o,this._handleDeleteClick=i,this._userId=r,this._cardId=e._id,this._handlePutLike=a,this._handleDeleteLike=u}var n,r;return n=t,(r=[{key:"_getElement",value:function(){return document.querySelector(this._selector).content.querySelector(".elements__item").cloneNode(!0)}},{key:"_toggleLike",value:function(){this._likeButton.classList.contains("elements__like_active")?this._handleDeleteLike(this._cardId):this._handlePutLike(this._cardId)}},{key:"_handleDelete",value:function(){this._handleDeleteClick(this._cardID)}},{key:"_handleImage",value:function(){this._handleImageClick(this._name,this._link)}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._toggleLike()})),this._deleteButton.addEventListener("click",(function(){e._handleDelete()})),this._cardImage.addEventListener("click",(function(){e._handleImage()}))}},{key:"likeCard",value:function(e){this._likes=e.likes,this._cardLikes.textContent=this._likes.length,this._likeButton.classList.toggle("elements__like_active")}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"createCard",value:function(){return this._element=this._getElement(),this._likeButton=this._element.querySelector(".elements__like"),this._deleteButton=this._element.querySelector(".elements__delete-btn"),this._cardImage=this._element.querySelector(".elements__image"),this._cardLikes=this._element.querySelector(".elements__like-counter"),this._cardTitle=this._element.querySelector(".elements__title"),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt="картинка ".concat(this._name),this._cardLikes.textContent=this._likes.length,this._owner._id!==this._userId&&this._deleteButton.remove(),this._setEventListeners(),this._element}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=n.formSelector,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass,this._formElement=t}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.classList.add(this._errorClass),t.textContent=e.validationMessage}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_disableSubmitButton",value:function(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.setAttribute("disabled","true")}},{key:"_enableSubmitButton",value:function(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled")}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}},{key:"setInitialFormState",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}},{key:"enableValidation",value:function(){var e=this;this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(n){e._checkInputValidity(t),e._toggleButtonState()}))}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){var n=t._renderer(e);t.addItem(n)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscape")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".popup__close-btn")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscape)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscape)}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.close()})),this._popup.addEventListener("mousedown",(function(t){t.target===t.currentTarget&&e.close()}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=h(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function h(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}function p(e,t){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},p(e,t)}function d(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e,t){var n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleFormSubmit=t,n._formElement=n._popup.querySelector(".form"),n._inputList=function(e){if(Array.isArray(e))return s(e)}(r=n._formElement.querySelectorAll(".form__input"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(r)||function(e,t){if(e){if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,t):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n._submitButton=n._formElement.querySelector(".submit-btn"),n._submitButtonText=n._submitButton.textContent,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputValueList={},this._inputList.forEach((function(t){return e._inputValueList[t.name]=t.value})),this._inputValueList}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){e[t.name]&&(t.value=e[t.name])}))}},{key:"setEventListeners",value:function(){var e=this;f(y(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()}))}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._submitButtonText}},{key:"close",value:function(){f(y(a.prototype),"close",this).call(this),this._formElement.reset()}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function w(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._imageLink=t._popup.querySelector(".popup__image"),t._imageSubtitle=t._popup.querySelector(".popup__image-subtitle"),t}return t=a,(n=[{key:"open",value:function(e,t){v(E(a.prototype),"open",this).call(this),this._imageLink.setAttribute("src",t),this._imageLink.setAttribute("alt","картинка ".concat(e)),this._imageSubtitle.textContent=e}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t),this._job=document.querySelector(n),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent}}},{key:"setUserInfo",value:function(e,t){this._name.textContent=e,this._job.textContent=t}},{key:"setAvatar",value:function(e){this._avatar.src=e}},{key:"getId",value:function(e){this._id=e._id}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=I(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},C.apply(this,arguments)}function I(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function T(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._confirmButton=t._popup.querySelector(".delete-popup-btn"),t}return t=a,(n=[{key:"setSubmitCallback",value:function(e){this._submitCallback=e}},{key:"setEventListeners",value:function(){var e=this;C(q(a.prototype),"setEventListeners",this).call(this),this._confirmButton.addEventListener("click",(function(){e._submitCallback(),e.close()}))}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getUserData",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject(new Error(e.status))})).catch((function(e){return Promise.reject(e)}))}},{key:"getCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject(new Error(e.status))})).catch((function(e){return Promise.reject(e)}))}},{key:"setUserData",value:function(e,t){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject(new Error(e.status))})).catch((function(e){return Promise.reject(e)}))}},{key:"addNewCard",value:function(e,t){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return e.ok?e.json():Promise.reject(new Error(e.status))})).catch((function(e){return Promise.reject(e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject(new Error(e.status))})).catch((function(e){return Promise.reject(e)}))}},{key:"putLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject(new Error(e.status))})).catch((function(e){return Promise.reject(e)}))}},{key:"deleteLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject(new Error(e.status))})).catch((function(e){return Promise.reject(e)}))}},{key:"changeAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject(new Error(e.status))})).catch((function(e){return Promise.reject(e)}))}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x=document.querySelector(".button_action_edit"),D=document.querySelector(".button_action_add"),V=document.querySelector(".profile__edit-avatar"),F=new U({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-52",headers:{authorization:"00a673b9-8570-48a8-8e0e-9115399f6375","Content-Type":"application/json"}}),N=new O(".profile__title",".profile__subtitle",".profile__avatar");F.getUserData().then((function(e){N.setUserInfo(e.name,e.about),N.setAvatar(e.avatar),N.getId(e)})).catch((function(e){console.log(e)}));var J=new _(".profile-popup",(function(e){J.renderLoading(!0),F.setUserData(e.name,e.job).then((function(e){N.setUserInfo(e.name,e.about)})).catch((function(e){console.log(e)})).finally((function(){J.renderLoading(!1)}))})),H=new _(".avatar-popup",(function(e){H.renderLoading(!0),F.changeAvatar(e.avatar).then((function(e){N.setAvatar(e.avatar)})).catch((function(e){console.log(e)})).finally((function(){H.renderLoading(!1)}))}));function M(e){var n=new t(e,"#elements-template",N._id,G.open.bind(G),(function(){K.open(),K.setSubmitCallback((function(){F.deleteCard(n._cardId).then((function(){n.deleteCard()})).catch((function(e){console.log(e)}))}))}),(function(){F.putLike(n._cardId).then((function(e){n.likeCard(e)})).catch((function(e){console.log(e)}))}),(function(){F.deleteLike(n._cardId).then((function(e){n.likeCard(e)})).catch((function(e){console.log(e)}))}));return n.createCard()}var z=new i(M,".elements__container");F.getCards().then((function(e){z.renderItems(e)})).catch((function(e){console.log(e)}));var $=new _(".elements-popup",(function(e){$.renderLoading(!0),F.addNewCard(e.place,e.link).then((function(e){z.addItem(M(e))})).catch((function(e){console.log(e)})).finally((function(){$.renderLoading(!1)}))})),G=new j(".image-popup"),K=new R(".delete-popup");J.setEventListeners(),$.setEventListeners(),G.setEventListeners(),H.setEventListeners(),K.setEventListeners(),x.addEventListener("click",(function(){J.open(),J.setInputValues(N.getUserInfo()),W["profile-form"].setInitialFormState()})),D.addEventListener("click",(function(){$.open(),W["elements-form"].setInitialFormState()})),V.addEventListener("click",(function(){H.open(),W["avatar-form"].setInitialFormState()}));var Q,W={};Q={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".submit-btn",inactiveButtonClass:"submit-btn_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},Array.from(document.querySelectorAll(Q.formSelector)).forEach((function(e){var t=new r(e,Q),n=e.getAttribute("name");W[n]=t,t.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bkksaUJBQWlCLFNBQVMsV0FDM0NpSixFQUFZSSxPQUVaZ0IsRUFBZSxlQUFlQyxxQkFDaEMsSUFLQSxJQVkwQm5KLEVBRnBCa0osRUFBaUIsQ0FBQyxFQUVFbEosRUFaRCxDQUN2QkUsYUFBYyxRQUNkRSxjQUFlLGVBQ2ZFLHFCQUFzQixjQUN0QkUsb0JBQXFCLHNCQUNyQkUsZ0JBQWlCLHlCQUNqQkUsV0FBWSw0QkFPS3FCLE1BQU1DLEtBQUs3RCxTQUFTOEQsaUJBQWlCbkMsRUFBT0UsZUFDcEQ2QixTQUFRLFNBQUNoQyxHQUNoQixJQUFNcUosRUFBWSxJQUFJdEosRUFBY0MsRUFBYUMsR0FFM0NxSixFQUFXdEosRUFBWXVKLGFBQWEsUUFFMUNKLEVBQWVHLEdBQVlELEVBRTNCQSxFQUFVRyxrQkFDWixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihkYXRhLCBzZWxlY3RvciwgdXNlcklkLCBoYW5kbGVJbWFnZUNsaWNrLCBoYW5kbGVEZWxldGVDbGljaywgaGFuZGxlUHV0TGlrZSwgaGFuZGxlRGVsZXRlTGlrZSkge1xuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XG5cdFx0dGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl9saWtlcyA9IGRhdGEubGlrZXM7XG4gICAgdGhpcy5fb3duZXIgPSBkYXRhLm93bmVyO1xuXHRcdHRoaXMuX3NlbGVjdG9yID0gc2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayA9IGhhbmRsZUltYWdlQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sgPSBoYW5kbGVEZWxldGVDbGljaztcbiAgICB0aGlzLl91c2VySWQgPSB1c2VySWQ7XG4gICAgdGhpcy5fY2FyZElkID0gZGF0YS5faWQ7XG4gICAgdGhpcy5faGFuZGxlUHV0TGlrZSA9IGhhbmRsZVB1dExpa2U7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlTGlrZSA9IGhhbmRsZURlbGV0ZUxpa2U7XG4gIH1cblxuXG4gIF9nZXRFbGVtZW50KCkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX3NlbGVjdG9yKVxuICAgICAgLmNvbnRlbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2l0ZW0nKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcblx0fVxuXG5cbiAgX3RvZ2dsZUxpa2UoKSB7XG4gICAgaWYgKHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKCdlbGVtZW50c19fbGlrZV9hY3RpdmUnKSkge1xuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlTGlrZSh0aGlzLl9jYXJkSWQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oYW5kbGVQdXRMaWtlKHRoaXMuX2NhcmRJZCk7XG4gICAgfVxuICB9XG5cblxuICBfaGFuZGxlRGVsZXRlKCkge1xuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrKHRoaXMuX2NhcmRJRCk7XG4gIH1cblxuXG4gIF9oYW5kbGVJbWFnZSgpIHtcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xuICB9XG5cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuX3RvZ2dsZUxpa2UoKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZSgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlSW1hZ2UoKTtcbiAgICB9KTtcbiB9XG5cblxuICBsaWtlQ2FyZChkYXRhKSB7XG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xuICAgIHRoaXMuX2NhcmRMaWtlcy50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ2VsZW1lbnRzX19saWtlX2FjdGl2ZScpO1xuICB9XG5cblxuICBkZWxldGVDYXJkKCkge1xuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XG4gICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XG4gIH1cblxuXG4gIGNyZWF0ZUNhcmQoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldEVsZW1lbnQoKTtcblxuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50c19fbGlrZScpO1xuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzX19kZWxldGUtYnRuJyk7XG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2ltYWdlJyk7XG4gICAgdGhpcy5fY2FyZExpa2VzID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2xpa2UtY291bnRlcicpO1xuICAgIHRoaXMuX2NhcmRUaXRsZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzX190aXRsZScpO1xuXG4gIFx0dGhpcy5fY2FyZFRpdGxlLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgXHR0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gYNC60LDRgNGC0LjQvdC60LAgJHt0aGlzLl9uYW1lfWA7XG4gICAgdGhpcy5fY2FyZExpa2VzLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xuXG4gICAgaWYgKHRoaXMuX293bmVyLl9pZCAhPT0gdGhpcy5fdXNlcklkKSB7XG4gICAgICB0aGlzLl9kZWxldGVCdXR0b24ucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICBcdHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG59XG5cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihmb3JtRWxlbWVudCwgY29uZmlnKSB7XG4gIHRoaXMuX2Zvcm1TZWxlY3RvciA9IGNvbmZpZy5mb3JtU2VsZWN0b3I7XG4gIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBjb25maWcuaW5wdXRTZWxlY3RvcjtcbiAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3I7XG4gIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gY29uZmlnLmlucHV0RXJyb3JDbGFzcztcbiAgdGhpcy5fZXJyb3JDbGFzcyA9IGNvbmZpZy5lcnJvckNsYXNzO1xuICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICB9XG5cbiAgICAvKiDQodC60YDRi9GC0Ywv0L/QvtC60LDQt9Cw0YLRjCDQvtGI0LjQsdC60LggKi9cblxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xuICB9XG5cblxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7XG4gIH1cblxuXG4gIC8qINCf0YDQvtCy0LXRgNC60LAg0L/QvtC70LXQuSAqL1xuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9XG5cblxuICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcbiAgICB9KTtcbiAgfVxuXG5cbiAgLyog0JrQvdC+0L/QutC4ICovXG5cbiAgX2Rpc2FibGVTdWJtaXRCdXR0b24oKSB7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwidHJ1ZVwiKTtcbiAgfVxuXG5cbiAgX2VuYWJsZVN1Ym1pdEJ1dHRvbigpIHtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24ucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XG4gIH1cblxuXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcbiAgICAgIHRoaXMuX2Rpc2FibGVTdWJtaXRCdXR0b24oKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9lbmFibGVTdWJtaXRCdXR0b24oKVxuICAgIH1cbiAgfVxuXG4gIC8qINCS0LDQu9C40LTQsNGG0LjRjyAqL1xuXG4gIHNldEluaXRpYWxGb3JtU3RhdGUoKSB7XG4gICAgLypjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2lucHV0KTsqL1xuXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9KTtcblxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKClcbiAgfVxuXG5cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgICB0aGlzLl9pbnB1dExpc3QgID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpKTtcblxuICAgIC8qY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9pbnB1dCk7Ki9cblxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKClcblxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIChldnQpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKClcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IocmVuZGVyZXIsIGNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcblx0XHR0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgY29uc3QgY2FyZCA9IHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xuICAgICAgdGhpcy5hZGRJdGVtKGNhcmQpO1xuICAgIH0pO1xuICB9XG5cbiAgYWRkSXRlbShlbGVtZW50KSB7XG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY2xvc2UtYnRuJyk7XG4gIH1cblxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY2FwZSk7XG4gIH1cblxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NhcGUpO1xuICB9XG5cblxuICBfaGFuZGxlRXNjYXBlID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIChldnQpID0+IHtcbiAgICAgIGlmIChldnQudGFyZ2V0ID09PSBldnQuY3VycmVudFRhcmdldCkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcuZm9ybScpO1xuICAgIHRoaXMuX2lucHV0TGlzdCA9IFsuLi50aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZm9ybV9faW5wdXQnKV07XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcignLnN1Ym1pdC1idG4nKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25UZXh0ID0gdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xuICB9XG5cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgdGhpcy5faW5wdXRWYWx1ZUxpc3QgPSB7fTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB0aGlzLl9pbnB1dFZhbHVlTGlzdFtpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlKTtcblxuICAgIHJldHVybiB0aGlzLl9pbnB1dFZhbHVlTGlzdDtcbiAgfVxuXG5cbiAgc2V0SW5wdXRWYWx1ZXMoaW5wdXRWYWx1ZUxpc3QpIHtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlmIChpbnB1dFZhbHVlTGlzdFtpbnB1dC5uYW1lXSkge1xuICAgICAgICBpbnB1dC52YWx1ZSA9IGlucHV0VmFsdWVMaXN0W2lucHV0Lm5hbWVdXG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuXG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfSlcbiAgfVxuXG5cbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcpIHtcbiAgICBpZiAoaXNMb2FkaW5nKSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSAn0KHQvtGF0YDQsNC90LXQvdC40LUuLi4nO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9zdWJtaXRCdXR0b25UZXh0O1xuICAgIH1cbiAgfVxuXG5cbiAgY2xvc2UoKSB7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5yZXNldCgpO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9pbWFnZUxpbmsgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJyk7XG4gICAgdGhpcy5faW1hZ2VTdWJ0aXRsZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2Utc3VidGl0bGUnKTtcbiAgfVxuXG4gIG9wZW4obmFtZSwgbGluaykge1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgICB0aGlzLl9pbWFnZUxpbmsuc2V0QXR0cmlidXRlKFwic3JjXCIsIGxpbmspO1xuICAgIHRoaXMuX2ltYWdlTGluay5zZXRBdHRyaWJ1dGUoXCJhbHRcIiwgYNC60LDRgNGC0LjQvdC60LAgJHtuYW1lfWApO1xuICAgIHRoaXMuX2ltYWdlU3VidGl0bGUudGV4dENvbnRlbnQgPSBuYW1lO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKG5hbWVTZWxlY3Rvciwgam9iU2VsZWN0b3IsIGF2YXRhclNlbGVjdG9yKSB7XG4gICAgdGhpcy5fbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcbiAgICB0aGlzLl9qb2IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYlNlbGVjdG9yKTtcbiAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhclNlbGVjdG9yKTtcbiAgfVxuXG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IHRoaXMuX25hbWUudGV4dENvbnRlbnQsXG4gICAgICBqb2I6IHRoaXMuX2pvYi50ZXh0Q29udGVudCxcbiAgICB9O1xuICB9XG5cbiAgc2V0VXNlckluZm8obmFtZSwgam9iKSB7XG4gICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgdGhpcy5fam9iLnRleHRDb250ZW50ID0gam9iO1xuICB9XG5cbiAgc2V0QXZhdGFyKHVybCkge1xuICAgIHRoaXMuX2F2YXRhci5zcmMgPSB1cmw7XG4gIH1cblxuICBnZXRJZChkYXRhKSB7XG4gICAgdGhpcy5faWQgPSBkYXRhLl9pZDtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aENvbmZpcm1hdGlvbiBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2NvbmZpcm1CdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcuZGVsZXRlLXBvcHVwLWJ0bicpO1xuICB9XG5cbiAgc2V0U3VibWl0Q2FsbGJhY2soY2FsbGJhY2spIHtcbiAgICB0aGlzLl9zdWJtaXRDYWxsYmFjayA9IGNhbGxiYWNrO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9jb25maXJtQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5fc3VibWl0Q2FsbGJhY2soKTtcblxuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pXG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yIChjb25maWcpIHtcbiAgICB0aGlzLl9iYXNlVXJsID0gY29uZmlnLmJhc2VVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuICB9XG5cblxuICBnZXRVc2VyRGF0YSgpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7aGVhZGVyczogdGhpcy5faGVhZGVyc30pXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihyZXMuc3RhdHVzKSlcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiBQcm9taXNlLnJlamVjdChlcnIpKVxuICB9XG5cblxuICBnZXRDYXJkcygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7aGVhZGVyczogdGhpcy5faGVhZGVyc30pXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihyZXMuc3RhdHVzKSlcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiBQcm9taXNlLnJlamVjdChlcnIpKVxuICB9XG5cblxuICBzZXRVc2VyRGF0YShuYW1lLCBqb2IpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLFxuICAgICAge21ldGhvZDogJ1BBVENIJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7bmFtZTogbmFtZSwgYWJvdXQ6IGpvYn0pXG4gICAgfSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKHJlcy5zdGF0dXMpKVxuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IFByb21pc2UucmVqZWN0KGVycikpXG4gIH1cblxuXG4gIGFkZE5ld0NhcmQocGxhY2UsIGxpbmspIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLFxuICAgICAge21ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtuYW1lOiBwbGFjZSwgbGluazogbGlua30pXG4gICAgfSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKHJlcy5zdGF0dXMpKVxuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IFByb21pc2UucmVqZWN0KGVycikpXG4gIH1cblxuXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsXG4gICAgICB7bWV0aG9kOiAnREVMRVRFJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKHJlcy5zdGF0dXMpKVxuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IFByb21pc2UucmVqZWN0KGVycikpXG4gIH1cblxuXG4gIHB1dExpa2UoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsXG4gICAgICB7bWV0aG9kOiAnUFVUJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKHJlcy5zdGF0dXMpKVxuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IFByb21pc2UucmVqZWN0KGVycikpXG4gIH1cblxuXG4gIGRlbGV0ZUxpa2UoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsXG4gICAgICB7bWV0aG9kOiAnREVMRVRFJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKHJlcy5zdGF0dXMpKVxuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IFByb21pc2UucmVqZWN0KGVycikpXG4gIH1cblxuXG4gIGNoYW5nZUF2YXRhcihhdmF0YXIpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCxcbiAgICB7bWV0aG9kOiAnUEFUQ0gnLFxuICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe2F2YXRhcjogYXZhdGFyfSlcbiAgICB9KVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IocmVzLnN0YXR1cykpXG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4gUHJvbWlzZS5yZWplY3QoZXJyKSlcbiAgfVxufVxuXG4iLCJpbXBvcnQgJy4vaW5kZXguY3NzJztcblxuaW1wb3J0IENhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gJy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyc7XG5pbXBvcnQgU2VjdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL1NlY3Rpb24uanMnO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJztcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzJztcbmltcG9ydCBVc2VySW5mbyBmcm9tICcuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzJztcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtYXRpb24gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanMnO1xuaW1wb3J0IEFwaSBmcm9tICcuLi9jb21wb25lbnRzL0FwaS5qcyc7XG5cblxuY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idXR0b25fYWN0aW9uX2VkaXQnKTtcbmNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idXR0b25fYWN0aW9uX2FkZCcpO1xuY29uc3QgY2hhbmdlQXZhdGFyQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQtYXZhdGFyJyk7XG5cblxuY29uc3QgYXBpQ29uZmlnID0ge1xuICBiYXNlVXJsOiAnaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC01MicsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiAnMDBhNjczYjktODU3MC00OGE4LThlMGUtOTExNTM5OWY2Mzc1JyxcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gIH1cbn07XG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoYXBpQ29uZmlnKTtcblxuXG4vKiDQmNC90YTQvtGA0LzQsNGG0LjRjyDQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70LUgKi9cblxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oJy5wcm9maWxlX190aXRsZScsICcucHJvZmlsZV9fc3VidGl0bGUnLCAnLnByb2ZpbGVfX2F2YXRhcicpO1xuXG5hcGkuZ2V0VXNlckRhdGEoKVxuLnRoZW4oKGRhdGEpID0+IHtcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhLm5hbWUsIGRhdGEuYWJvdXQpO1xuICAgIHVzZXJJbmZvLnNldEF2YXRhcihkYXRhLmF2YXRhcik7XG4gICAgdXNlckluZm8uZ2V0SWQoZGF0YSk7XG59KVxuLmNhdGNoKChlcnIpID0+IHtcbiAgY29uc29sZS5sb2coZXJyKVxufSlcblxuXG4vKiDQn9C+0L/QsNC/INGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0LjQvdGE0Ysg0L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C1ICovXG5cbmNvbnN0IHByb2ZpbGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKCcucHJvZmlsZS1wb3B1cCcsIChpbnB1dFZhbHVlTGlzdCkgPT4ge1xuICBwcm9maWxlUG9wdXAucmVuZGVyTG9hZGluZyh0cnVlKTtcbiAgYXBpLnNldFVzZXJEYXRhKGlucHV0VmFsdWVMaXN0Lm5hbWUsIGlucHV0VmFsdWVMaXN0LmpvYilcbiAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhLm5hbWUsIGRhdGEuYWJvdXQpO1xuICB9KVxuICAuY2F0Y2goKGVycikgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gIH0pXG4gIC5maW5hbGx5KCgpID0+IHtcbiAgICBwcm9maWxlUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XG4gIH0pXG59KVxuXG5cbi8qINCf0L7Qv9Cw0L8g0LDQstCw0YLQsNGA0LAgKi9cblxuY29uc3QgYXZhdGFyUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSgnLmF2YXRhci1wb3B1cCcsIChpbnB1dFZhbHVlTGlzdCkgPT4ge1xuICBhdmF0YXJQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xuICBhcGkuY2hhbmdlQXZhdGFyKGlucHV0VmFsdWVMaXN0LmF2YXRhcilcbiAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICB1c2VySW5mby5zZXRBdmF0YXIoZGF0YS5hdmF0YXIpO1xuICB9KVxuICAuY2F0Y2goKGVycikgPT4ge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gIH0pXG4gIC5maW5hbGx5KCgpID0+IHtcbiAgICBhdmF0YXJQb3B1cC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcbiAgfSlcbn0pXG5cblxuLyog0J7RgtGA0LjRgdC+0LLQutCwINC60LDRgNGC0L7Rh9C10LogKi9cblxuZnVuY3Rpb24gY3JlYXRlQ2FyZChkYXRhKSB7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChkYXRhLCAnI2VsZW1lbnRzLXRlbXBsYXRlJywgdXNlckluZm8uX2lkLCBpbWFnZVBvcHVwLm9wZW4uYmluZChpbWFnZVBvcHVwKSxcbiAgICAoKSA9PiB7XG4gICAgICBkZWxldGVQb3B1cC5vcGVuKCk7XG4gICAgICBkZWxldGVQb3B1cC5zZXRTdWJtaXRDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGFwaS5kZWxldGVDYXJkKGNhcmQuX2NhcmRJZClcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGNhcmQuZGVsZXRlQ2FyZCgpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgIH0sXG4gICAgKCkgPT4ge1xuICAgICAgYXBpLnB1dExpa2UoY2FyZC5fY2FyZElkKVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBjYXJkLmxpa2VDYXJkKHJlcyk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pXG4gICAgfSxcbiAgICAoKSA9PiB7XG4gICAgICBhcGkuZGVsZXRlTGlrZShjYXJkLl9jYXJkSWQpXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIGNhcmQubGlrZUNhcmQocmVzKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgfSlcbiAgICB9XG4gIClcblxuXHRjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuY3JlYXRlQ2FyZCgpO1xuXG4gIHJldHVybiBjYXJkRWxlbWVudFxufVxuXG5cbmNvbnN0INGBYXJkc0xpc3QgPSBuZXcgU2VjdGlvbihjcmVhdGVDYXJkLCAnLmVsZW1lbnRzX19jb250YWluZXInKTtcblxuYXBpLmdldENhcmRzKClcbi50aGVuKChyZXMpID0+IHtcbiAg0YFhcmRzTGlzdC5yZW5kZXJJdGVtcyhyZXMpO1xufSlcbi5jYXRjaCgoZXJyKSA9PiB7XG4gIGNvbnNvbGUubG9nKGVycik7XG59KTtcblxuXG4vKiDQn9C+0L/QsNC/INC00L7QsdCw0LLQu9C10L3QuNGPINC60LDRgNGC0L7Rh9C60LggKi9cblxuY29uc3QgZWxlbWVudHNQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKCcuZWxlbWVudHMtcG9wdXAnLCAoaW5wdXRWYWx1ZUxpc3QpID0+IHtcbiAgZWxlbWVudHNQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xuICBhcGkuYWRkTmV3Q2FyZChpbnB1dFZhbHVlTGlzdC5wbGFjZSwgaW5wdXRWYWx1ZUxpc3QubGluaylcbiAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICDRgWFyZHNMaXN0LmFkZEl0ZW0oY3JlYXRlQ2FyZChkYXRhKSk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgfSlcbiAgLmZpbmFsbHkoKCkgPT4ge1xuICAgIGVsZW1lbnRzUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XG4gIH0pXG59KVxuXG5cbmNvbnN0IGltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5pbWFnZS1wb3B1cCcpO1xuXG5jb25zdCBkZWxldGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhDb25maXJtYXRpb24oJy5kZWxldGUtcG9wdXAnKVxuXG5cbnByb2ZpbGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5lbGVtZW50c1BvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuYXZhdGFyUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuZGVsZXRlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuXG4vKiDQntCx0YDQsNCx0L7RgtGH0LjQutC4INC60L3QvtC/0L7QuiovXG5cbmVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gIHByb2ZpbGVQb3B1cC5vcGVuKCk7XG4gIHByb2ZpbGVQb3B1cC5zZXRJbnB1dFZhbHVlcyh1c2VySW5mby5nZXRVc2VySW5mbygpKTtcblxuICBmb3JtVmFsaWRhdG9yc1sncHJvZmlsZS1mb3JtJ10uc2V0SW5pdGlhbEZvcm1TdGF0ZSgpO1xufSk7XG5cblxuYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICBlbGVtZW50c1BvcHVwLm9wZW4oKTtcblxuICBmb3JtVmFsaWRhdG9yc1snZWxlbWVudHMtZm9ybSddLnNldEluaXRpYWxGb3JtU3RhdGUoKTtcbn0pO1xuXG5cbmNoYW5nZUF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgYXZhdGFyUG9wdXAub3BlbigpO1xuXG4gIGZvcm1WYWxpZGF0b3JzWydhdmF0YXItZm9ybSddLnNldEluaXRpYWxGb3JtU3RhdGUoKTtcbn0pXG5cblxuLyog0JLQsNC70LjQtNCw0YbQuNGPICovXG5cbmNvbnN0IHZhbGlkYXRpb25Db25maWcgPSB7XG4gIGZvcm1TZWxlY3RvcjogJy5mb3JtJyxcbiAgaW5wdXRTZWxlY3RvcjogJy5mb3JtX19pbnB1dCcsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLnN1Ym1pdC1idG4nLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAnc3VibWl0LWJ0bl9pbmFjdGl2ZScsXG4gIGlucHV0RXJyb3JDbGFzczogJ2Zvcm1fX2lucHV0X3R5cGVfZXJyb3InLFxuICBlcnJvckNsYXNzOiAnZm9ybV9faW5wdXQtZXJyb3JfYWN0aXZlJyxcbn1cblxuXG5jb25zdCBmb3JtVmFsaWRhdG9ycyA9IHt9XG5cbmNvbnN0IGhhbmRsZVZhbGlkYXRpb24gPSAoY29uZmlnKSA9PiB7XG4gIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5mb3JtU2VsZWN0b3IpKVxuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1FbGVtZW50LCBjb25maWcpO1xuXG4gICAgY29uc3QgZm9ybU5hbWUgPSBmb3JtRWxlbWVudC5nZXRBdHRyaWJ1dGUoJ25hbWUnKTtcblxuICAgIGZvcm1WYWxpZGF0b3JzW2Zvcm1OYW1lXSA9IHZhbGlkYXRvcjtcblxuICAgIHZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG4gIH0pO1xufTtcblxuaGFuZGxlVmFsaWRhdGlvbih2YWxpZGF0aW9uQ29uZmlnKTtcbiJdLCJuYW1lcyI6WyJDYXJkIiwiZGF0YSIsInNlbGVjdG9yIiwidXNlcklkIiwiaGFuZGxlSW1hZ2VDbGljayIsImhhbmRsZURlbGV0ZUNsaWNrIiwiaGFuZGxlUHV0TGlrZSIsImhhbmRsZURlbGV0ZUxpa2UiLCJ0aGlzIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2xpa2VzIiwibGlrZXMiLCJfb3duZXIiLCJvd25lciIsIl9zZWxlY3RvciIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX2hhbmRsZURlbGV0ZUNsaWNrIiwiX3VzZXJJZCIsIl9jYXJkSWQiLCJfaWQiLCJfaGFuZGxlUHV0TGlrZSIsIl9oYW5kbGVEZWxldGVMaWtlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9saWtlQnV0dG9uIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJfY2FyZElEIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl90b2dnbGVMaWtlIiwiX2RlbGV0ZUJ1dHRvbiIsIl9oYW5kbGVEZWxldGUiLCJfY2FyZEltYWdlIiwiX2hhbmRsZUltYWdlIiwiX2NhcmRMaWtlcyIsInRleHRDb250ZW50IiwibGVuZ3RoIiwidG9nZ2xlIiwiX2VsZW1lbnQiLCJyZW1vdmUiLCJfZ2V0RWxlbWVudCIsIl9jYXJkVGl0bGUiLCJzcmMiLCJhbHQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJGb3JtVmFsaWRhdG9yIiwiZm9ybUVsZW1lbnQiLCJjb25maWciLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm1FbGVtZW50IiwiaW5wdXRFbGVtZW50IiwiZXJyb3JFbGVtZW50IiwiaWQiLCJhZGQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJfaW5wdXRMaXN0Iiwic29tZSIsIl9zdWJtaXRCdXR0b24iLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJfaGFzSW52YWxpZElucHV0IiwiX2Rpc2FibGVTdWJtaXRCdXR0b24iLCJfZW5hYmxlU3VibWl0QnV0dG9uIiwiZm9yRWFjaCIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJldnQiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiU2VjdGlvbiIsInJlbmRlcmVyIiwiY29udGFpbmVyU2VsZWN0b3IiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbXMiLCJpdGVtIiwiY2FyZCIsImFkZEl0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsImtleSIsImNsb3NlIiwiX3BvcHVwIiwiX2Nsb3NlQnV0dG9uIiwiX2hhbmRsZUVzY2FwZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9zdWJtaXRCdXR0b25UZXh0IiwiX2lucHV0VmFsdWVMaXN0IiwiaW5wdXQiLCJ2YWx1ZSIsImlucHV0VmFsdWVMaXN0IiwicHJldmVudERlZmF1bHQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpc0xvYWRpbmciLCJyZXNldCIsIlBvcHVwV2l0aEltYWdlIiwiX2ltYWdlTGluayIsIl9pbWFnZVN1YnRpdGxlIiwiVXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJqb2JTZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiX2pvYiIsIl9hdmF0YXIiLCJqb2IiLCJ1cmwiLCJQb3B1cFdpdGhDb25maXJtYXRpb24iLCJfY29uZmlybUJ1dHRvbiIsImNhbGxiYWNrIiwiX3N1Ym1pdENhbGxiYWNrIiwiQXBpIiwiX2Jhc2VVcmwiLCJiYXNlVXJsIiwiX2hlYWRlcnMiLCJoZWFkZXJzIiwiZmV0Y2giLCJ0aGVuIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsIkVycm9yIiwic3RhdHVzIiwiY2F0Y2giLCJlcnIiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImFib3V0IiwicGxhY2UiLCJjYXJkSWQiLCJhdmF0YXIiLCJlZGl0QnV0dG9uIiwiYWRkQnV0dG9uIiwiY2hhbmdlQXZhdGFyQnV0dG9uIiwiYXBpIiwiYXV0aG9yaXphdGlvbiIsInVzZXJJbmZvIiwiZ2V0VXNlckRhdGEiLCJzZXRVc2VySW5mbyIsInNldEF2YXRhciIsImdldElkIiwiY29uc29sZSIsImxvZyIsInByb2ZpbGVQb3B1cCIsInJlbmRlckxvYWRpbmciLCJzZXRVc2VyRGF0YSIsImZpbmFsbHkiLCJhdmF0YXJQb3B1cCIsImNoYW5nZUF2YXRhciIsImNyZWF0ZUNhcmQiLCJpbWFnZVBvcHVwIiwib3BlbiIsImJpbmQiLCJkZWxldGVQb3B1cCIsInNldFN1Ym1pdENhbGxiYWNrIiwiZGVsZXRlQ2FyZCIsInB1dExpa2UiLCJsaWtlQ2FyZCIsImRlbGV0ZUxpa2UiLCLRgWFyZHNMaXN0IiwiZ2V0Q2FyZHMiLCJyZW5kZXJJdGVtcyIsImVsZW1lbnRzUG9wdXAiLCJhZGROZXdDYXJkIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJzZXRJbnB1dFZhbHVlcyIsImdldFVzZXJJbmZvIiwiZm9ybVZhbGlkYXRvcnMiLCJzZXRJbml0aWFsRm9ybVN0YXRlIiwidmFsaWRhdG9yIiwiZm9ybU5hbWUiLCJnZXRBdHRyaWJ1dGUiLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==